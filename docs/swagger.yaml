basePath: /
definitions:
  handlers.LoginInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  handlers.RegisterInput:
    properties:
      password:
        minLength: 6
        type: string
      username:
        maxLength: 20
        minLength: 3
        type: string
    required:
    - password
    - username
    type: object
  models.Student:
    properties:
      age:
        type: integer
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      id:
        type: integer
      major:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.StudentRequest:
    properties:
      age:
        maximum: 100
        minimum: 16
        type: integer
      email:
        type: string
      major:
        type: string
      name:
        maxLength: 50
        minLength: 2
        type: string
    required:
    - age
    - email
    - name
    type: object
  models.UpdateStudentRequest:
    properties:
      age:
        maximum: 100
        minimum: 16
        type: integer
      email:
        type: string
      major:
        type: string
      name:
        maxLength: 50
        minLength: 2
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a simple student management API with authentication
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Student Management API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login with username and password to get JWT token
      parameters:
      - description: User credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Login user
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user with username and password
      parameters:
      - description: User registration info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Register a new user
      tags:
      - auth
  /students:
    get:
      consumes:
      - application/json
      description: Get a list of all students
      parameters:
      - default: Bearer <Add access token here>
        description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Student'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: Get all students
      tags:
      - students
    post:
      consumes:
      - application/json
      description: Create a new student with required information
      parameters:
      - default: Bearer <Add access token here>
        description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Student info
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/models.StudentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new student
      tags:
      - students
  /students/{id}:
    delete:
      consumes:
      - application/json
      description: Delete student by student ID
      parameters:
      - default: Bearer <Add access token here>
        description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Student ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete student
      tags:
      - students
    get:
      consumes:
      - application/json
      description: Get student information by student ID
      parameters:
      - default: Bearer <Add access token here>
        description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Student ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Student'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get student by ID
      tags:
      - students
    put:
      consumes:
      - application/json
      description: Update student information by student ID
      parameters:
      - default: Bearer <Add access token here>
        description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Student ID
        in: path
        name: id
        required: true
        type: integer
      - description: Student info
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/models.UpdateStudentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update student
      tags:
      - students
swagger: "2.0"
